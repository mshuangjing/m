<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byzoro.mapper.SettingSmmsMapper">
  <resultMap id="BaseResultMap" type="com.byzoro.entity.SettingSmms">
    <id column="setting_smms_id" jdbcType="INTEGER" property="id" />
    <result column="setting_smms_user_passwd" jdbcType="VARCHAR" property="userPasswd" />
    <result column="setting_smms_authentication_key" jdbcType="VARCHAR" property="authenticationKey" />
    <result column="setting_smms_is_encrypt" jdbcType="BIT" property="isEncrypt" />
    <result column="setting_smms_aes_key" jdbcType="VARCHAR" property="aesKey" />
    <result column="setting_smms_aes_offset" jdbcType="VARCHAR" property="aesOffset" />
    <result column="setting_smms_hash_method" jdbcType="BIT" property="hashMethod" />
    <result column="setting_smms_is_zip" jdbcType="BIT" property="isZip" />
    <result column="setting_smms_version" jdbcType="VARCHAR" property="version" />
    <result column="setting_smms_ftp_ip" jdbcType="VARCHAR" property="ftpIp" />
    <result column="setting_smms_ftp_port" jdbcType="INTEGER" property="ftpPort" />
    <result column="setting_smms_ftp_path" jdbcType="VARCHAR" property="ftpPath" />
    <result column="setting_smms_ftp_user" jdbcType="VARCHAR" property="ftpUser" />
    <result column="setting_smms_ftp_passwd" jdbcType="VARCHAR" property="ftpPasswd" />
    <result column="setting_smms_webservice_addr" jdbcType="VARCHAR" property="webserviceAddr" />
  </resultMap>
  <sql id="Base_Column_List">
    setting_smms.id as setting_smms_id, setting_smms.user_passwd as setting_smms_user_passwd, 
    setting_smms.authentication_key as setting_smms_authentication_key, setting_smms.is_encrypt as setting_smms_is_encrypt, 
    setting_smms.aes_key as setting_smms_aes_key, setting_smms.aes_offset as setting_smms_aes_offset, 
    setting_smms.hash_method as setting_smms_hash_method, setting_smms.is_zip as setting_smms_is_zip, 
    setting_smms.version as setting_smms_version, setting_smms.ftp_ip as setting_smms_ftp_ip, 
    setting_smms.ftp_port as setting_smms_ftp_port, setting_smms.ftp_path as setting_smms_ftp_path, 
    setting_smms.ftp_user as setting_smms_ftp_user, setting_smms.ftp_passwd as setting_smms_ftp_passwd, 
    setting_smms.webservice_addr as setting_smms_webservice_addr
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from setting_smms setting_smms
    where setting_smms.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from setting_smms
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.byzoro.entity.SettingSmms" useGeneratedKeys="true">
    insert into setting_smms (user_passwd, authentication_key, is_encrypt, 
      aes_key, aes_offset, hash_method, 
      is_zip, version, ftp_ip, 
      ftp_port, ftp_path, ftp_user, 
      ftp_passwd, webservice_addr)
    values (#{userPasswd,jdbcType=VARCHAR}, #{authenticationKey,jdbcType=VARCHAR}, #{isEncrypt,jdbcType=BIT}, 
      #{aesKey,jdbcType=VARCHAR}, #{aesOffset,jdbcType=VARCHAR}, #{hashMethod,jdbcType=BIT}, 
      #{isZip,jdbcType=BIT}, #{version,jdbcType=VARCHAR}, #{ftpIp,jdbcType=VARCHAR}, 
      #{ftpPort,jdbcType=INTEGER}, #{ftpPath,jdbcType=VARCHAR}, #{ftpUser,jdbcType=VARCHAR}, 
      #{ftpPasswd,jdbcType=VARCHAR}, #{webserviceAddr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.byzoro.entity.SettingSmms" useGeneratedKeys="true">
    insert into setting_smms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userPasswd != null">
        user_passwd,
      </if>
      <if test="authenticationKey != null">
        authentication_key,
      </if>
      <if test="isEncrypt != null">
        is_encrypt,
      </if>
      <if test="aesKey != null">
        aes_key,
      </if>
      <if test="aesOffset != null">
        aes_offset,
      </if>
      <if test="hashMethod != null">
        hash_method,
      </if>
      <if test="isZip != null">
        is_zip,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="ftpIp != null">
        ftp_ip,
      </if>
      <if test="ftpPort != null">
        ftp_port,
      </if>
      <if test="ftpPath != null">
        ftp_path,
      </if>
      <if test="ftpUser != null">
        ftp_user,
      </if>
      <if test="ftpPasswd != null">
        ftp_passwd,
      </if>
      <if test="webserviceAddr != null">
        webservice_addr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userPasswd != null">
        #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="authenticationKey != null">
        #{authenticationKey,jdbcType=VARCHAR},
      </if>
      <if test="isEncrypt != null">
        #{isEncrypt,jdbcType=BIT},
      </if>
      <if test="aesKey != null">
        #{aesKey,jdbcType=VARCHAR},
      </if>
      <if test="aesOffset != null">
        #{aesOffset,jdbcType=VARCHAR},
      </if>
      <if test="hashMethod != null">
        #{hashMethod,jdbcType=BIT},
      </if>
      <if test="isZip != null">
        #{isZip,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="ftpIp != null">
        #{ftpIp,jdbcType=VARCHAR},
      </if>
      <if test="ftpPort != null">
        #{ftpPort,jdbcType=INTEGER},
      </if>
      <if test="ftpPath != null">
        #{ftpPath,jdbcType=VARCHAR},
      </if>
      <if test="ftpUser != null">
        #{ftpUser,jdbcType=VARCHAR},
      </if>
      <if test="ftpPasswd != null">
        #{ftpPasswd,jdbcType=VARCHAR},
      </if>
      <if test="webserviceAddr != null">
        #{webserviceAddr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.byzoro.entity.SettingSmms">
    update setting_smms
    <set>
      <if test="userPasswd != null">
        user_passwd = #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="authenticationKey != null">
        authentication_key = #{authenticationKey,jdbcType=VARCHAR},
      </if>
      <if test="isEncrypt != null">
        is_encrypt = #{isEncrypt,jdbcType=BIT},
      </if>
      <if test="aesKey != null">
        aes_key = #{aesKey,jdbcType=VARCHAR},
      </if>
      <if test="aesOffset != null">
        aes_offset = #{aesOffset,jdbcType=VARCHAR},
      </if>
      <if test="hashMethod != null">
        hash_method = #{hashMethod,jdbcType=BIT},
      </if>
      <if test="isZip != null">
        is_zip = #{isZip,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="ftpIp != null">
        ftp_ip = #{ftpIp,jdbcType=VARCHAR},
      </if>
      <if test="ftpPort != null">
        ftp_port = #{ftpPort,jdbcType=INTEGER},
      </if>
      <if test="ftpPath != null">
        ftp_path = #{ftpPath,jdbcType=VARCHAR},
      </if>
      <if test="ftpUser != null">
        ftp_user = #{ftpUser,jdbcType=VARCHAR},
      </if>
      <if test="ftpPasswd != null">
        ftp_passwd = #{ftpPasswd,jdbcType=VARCHAR},
      </if>
      <if test="webserviceAddr != null">
        webservice_addr = #{webserviceAddr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.byzoro.entity.SettingSmms">
    update setting_smms
    set user_passwd = #{userPasswd,jdbcType=VARCHAR},
      authentication_key = #{authenticationKey,jdbcType=VARCHAR},
      is_encrypt = #{isEncrypt,jdbcType=BIT},
      aes_key = #{aesKey,jdbcType=VARCHAR},
      aes_offset = #{aesOffset,jdbcType=VARCHAR},
      hash_method = #{hashMethod,jdbcType=BIT},
      is_zip = #{isZip,jdbcType=BIT},
      version = #{version,jdbcType=VARCHAR},
      ftp_ip = #{ftpIp,jdbcType=VARCHAR},
      ftp_port = #{ftpPort,jdbcType=INTEGER},
      ftp_path = #{ftpPath,jdbcType=VARCHAR},
      ftp_user = #{ftpUser,jdbcType=VARCHAR},
      ftp_passwd = #{ftpPasswd,jdbcType=VARCHAR},
      webservice_addr = #{webserviceAddr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>