<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byzoro.mapper.BasicDomainMapper">
  <resultMap id="BaseResultMap" type="com.byzoro.entity.BasicDomain">
    <id column="basic_domain_domain_id" jdbcType="BIGINT" property="domainId" />
    <result column="basic_domain_service_id" jdbcType="BIGINT" property="serviceId" />
    <result column="basic_domain_status" jdbcType="BIT" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.byzoro.entity.BasicDomain">
    <result column="basic_domain_domain_name" jdbcType="LONGVARCHAR" property="domainName" />
  </resultMap>
  <sql id="Base_Column_List">
    basic_domain.domain_id as basic_domain_domain_id, basic_domain.service_id as basic_domain_service_id, 
    basic_domain.`status` as `basic_domain_status`
  </sql>
  <sql id="Blob_Column_List">
    basic_domain.domain_name as basic_domain_domain_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from basic_domain basic_domain
    where basic_domain.domain_id = #{domainId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from basic_domain
    where domain_id = #{domainId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.byzoro.entity.BasicDomain">
    insert into basic_domain (domain_id, service_id, `status`, 
      domain_name)
    values (#{domainId,jdbcType=BIGINT}, #{serviceId,jdbcType=BIGINT}, #{status,jdbcType=BIT}, 
      #{domainName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.byzoro.entity.BasicDomain">
    insert into basic_domain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="domainId != null">
        domain_id,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="domainName != null">
        domain_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="domainId != null">
        #{domainId,jdbcType=BIGINT},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="domainName != null">
        #{domainName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.byzoro.entity.BasicDomain">
    update basic_domain
    <set>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="domainName != null">
        domain_name = #{domainName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where domain_id = #{domainId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.byzoro.entity.BasicDomain">
    update basic_domain
    set service_id = #{serviceId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=BIT},
      domain_name = #{domainName,jdbcType=LONGVARCHAR}
    where domain_id = #{domainId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.byzoro.entity.BasicDomain">
    update basic_domain
    set service_id = #{serviceId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=BIT}
    where domain_id = #{domainId,jdbcType=BIGINT}
  </update>
</mapper>