<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byzoro.mapper.BasicOtheruserIpsegMapper">
  <resultMap id="BaseResultMap" type="com.byzoro.entity.BasicOtheruserIpseg">
    <id column="basic_otheruser_ipseg_ip_id" jdbcType="BIGINT" property="ipId" />
    <result column="basic_otheruser_ipseg_hhid" jdbcType="BIGINT" property="hhid" />
    <result column="basic_otheruser_ipseg_start_ip" jdbcType="VARCHAR" property="startIp" />
    <result column="basic_otheruser_ipseg_end_ip" jdbcType="VARCHAR" property="endIp" />
    <result column="basic_otheruser_ipseg_is_special" jdbcType="BIT" property="isSpecial" />
    <result column="basic_otheruser_ipseg_status" jdbcType="BIT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    basic_otheruser_ipseg.ip_id as basic_otheruser_ipseg_ip_id, basic_otheruser_ipseg.hhid as basic_otheruser_ipseg_hhid, 
    basic_otheruser_ipseg.start_ip as basic_otheruser_ipseg_start_ip, basic_otheruser_ipseg.end_ip as basic_otheruser_ipseg_end_ip, 
    basic_otheruser_ipseg.is_special as basic_otheruser_ipseg_is_special, basic_otheruser_ipseg.`status` as `basic_otheruser_ipseg_status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from basic_otheruser_ipseg basic_otheruser_ipseg
    where basic_otheruser_ipseg.ip_id = #{ipId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from basic_otheruser_ipseg
    where ip_id = #{ipId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.byzoro.entity.BasicOtheruserIpseg">
    insert into basic_otheruser_ipseg (ip_id, hhid, start_ip, 
      end_ip, is_special, `status`)
    values (#{ipId,jdbcType=BIGINT}, #{hhid,jdbcType=BIGINT}, #{startIp,jdbcType=VARCHAR}, 
      #{endIp,jdbcType=VARCHAR}, #{isSpecial,jdbcType=BIT}, #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.byzoro.entity.BasicOtheruserIpseg">
    insert into basic_otheruser_ipseg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ipId != null">
        ip_id,
      </if>
      <if test="hhid != null">
        hhid,
      </if>
      <if test="startIp != null">
        start_ip,
      </if>
      <if test="endIp != null">
        end_ip,
      </if>
      <if test="isSpecial != null">
        is_special,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ipId != null">
        #{ipId,jdbcType=BIGINT},
      </if>
      <if test="hhid != null">
        #{hhid,jdbcType=BIGINT},
      </if>
      <if test="startIp != null">
        #{startIp,jdbcType=VARCHAR},
      </if>
      <if test="endIp != null">
        #{endIp,jdbcType=VARCHAR},
      </if>
      <if test="isSpecial != null">
        #{isSpecial,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.byzoro.entity.BasicOtheruserIpseg">
    update basic_otheruser_ipseg
    <set>
      <if test="hhid != null">
        hhid = #{hhid,jdbcType=BIGINT},
      </if>
      <if test="startIp != null">
        start_ip = #{startIp,jdbcType=VARCHAR},
      </if>
      <if test="endIp != null">
        end_ip = #{endIp,jdbcType=VARCHAR},
      </if>
      <if test="isSpecial != null">
        is_special = #{isSpecial,jdbcType=BIT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
    </set>
    where ip_id = #{ipId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.byzoro.entity.BasicOtheruserIpseg">
    update basic_otheruser_ipseg
    set hhid = #{hhid,jdbcType=BIGINT},
      start_ip = #{startIp,jdbcType=VARCHAR},
      end_ip = #{endIp,jdbcType=VARCHAR},
      is_special = #{isSpecial,jdbcType=BIT},
      `status` = #{status,jdbcType=BIT}
    where ip_id = #{ipId,jdbcType=BIGINT}
  </update>
</mapper>