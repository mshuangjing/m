<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.byzoro.mapper.SYSRoleMapper">
    <resultMap id="BaseResultMap" type="com.byzoro.entity.SYSRole">
        <id column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="desp" property="desp" jdbcType="VARCHAR"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="is_active" property="isActive" jdbcType="VARCHAR"/>
        <result column="role_code" property="roleCode" jdbcType="VARCHAR"/>
        <!-- <collection property="permissionList" column="role_id" ofType="SYSPermission" resultMap="com.byzoro.mapper.SYSPermissionMapper.BaseResultMap" /> -->
    </resultMap>
    <sql id="Base_Column_List">
    role_id, role_name, desp, created_by, created_at, updated_by, updated_at, is_active, 
    role_code
  </sql>
    <sql id="queryCondition">
        <where>
            <if test="roleName != null and roleName !=''">
                and role_name LIKE CONCAT('%','${roleName}','%')
            </if>
            <if test="desp != null and desp !=''">
                and desp LIKE #{desp,jdbcType=VARCHAR}
            </if>
            <if test="roleId != null and roleId !=''">
                and role_id > 1
            </if>
        </where>
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <!--删除角色-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    DELETE
        tsr,
        tsrr
    FROM
        t_sys_role tsr
        LEFT JOIN t_sys_role_resource tsrr ON tsr.role_id = tsrr.role_id
    WHERE
        tsr.role_id = #{roleId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.byzoro.entity.SYSRole">
    insert into t_sys_role (role_id, role_name, desp, 
      created_by, created_at, updated_by, 
      updated_at, is_active, role_code
      )
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{desp,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{isActive,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.byzoro.entity.SYSRole">
        insert into t_sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="desp != null">
                desp,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="desp != null">
                #{desp,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.byzoro.entity.SYSRole">
        update t_sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="desp != null">
                desp = #{desp,jdbcType=VARCHAR},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.byzoro.entity.SYSRole">
    update t_sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      desp = #{desp,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      is_active = #{isActive,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>

    <!-- 查询总的记录数 -->
    <select id="getCount" resultType="long">
		SELECT count(role_id)
		FROM t_sys_role
	</select>

    <select id="getSYSRoleList" resultType="java.util.HashMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role
        <include refid="queryCondition"></include>
        ORDER BY role_id desc
        limit
        #{pageCurr,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </select>

    <delete id="deleteResourceByRoldId" parameterType="java.lang.String">
		  	delete from t_sys_role_resource
		    where role_id = #{roleId,jdbcType=INTEGER}
	</delete>

    <!-- 插入角色和资源的关系 -->
    <insert id="insertRelationOfRoleAndResource" parameterType="java.util.List">
        insert into t_sys_role_resource (role_id,resource_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleId},#{item.resourceId})
        </foreach>
    </insert>

    <!-- 获取用户角色信息 -->
    <select id="getUserRoleInfo" resultType="java.util.HashMap" parameterType="java.lang.Integer">
	  		select * from t_sys_user_role where user_id = #{userId,jdbcType=INTEGER}
	  </select>

    <!-- 删除用户角色 -->
    <delete id="deleteRoleByUserId" parameterType="java.lang.Integer">
	  		DELETE FROM t_sys_user_role where user_id = #{userId,jdbcType=INTEGER}
	</delete>

    <!-- 赋予用户角色 -->
    <insert id="insertRoleByUserId" parameterType="java.util.List">
        insert into t_sys_user_role (user_id,role_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId},#{item.roleId})
        </foreach>
    </insert>

    <!--查询总数-->
    <select id="selectTotalNumber" resultType="int">
        SELECT count(role_id)
        FROM t_sys_role
        <include refid="queryCondition"></include>
    </select>

    <!--通过名称查询角色-->
    <select id="getRoleByName" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_sys_role
        where role_name = #{roleName,jdbcType=VARCHAR}
    </select>

    <!--通过角色id查询用户角色关联信息-->
    <select id="getSysUserRoleByRole" resultType="java.util.HashMap" parameterType="java.util.Map">
		select * from t_sys_user_role where role_id = #{roleId,jdbcType=VARCHAR}
	</select>
    <!--查询除了管理员之外的角色-->
    <select id="getSysRoleListNotAdmin" resultType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from t_sys_role
        where role_id !=1
    </select>

</mapper>